image: mcr.microsoft.com/dotnet/sdk:7.0

variables:
  DOTNET_NOLOGO: 'true'

stages:
  - check
  - test
  - report
  - build

check:
  stage: check
  script:
    - dotnet format --verify-no-changes --exclude Tests --verbosity quiet

test:
  stage: test
  script:
    - dotnet test --environment DOTNET_ENVIRONMENT=Test --verbosity normal --filter "Category!=Service&Category!=Integration" --collect:"XPlat Code Coverage" /p:ExcludeByAttribute=\"Obsolete,GeneratedCodeAttribute,CompilerGeneratedAttribute,ExcludeFromCodeCoverage\"
    - dotnet tool install --global dotnet-reportgenerator-globaltool; ~/.dotnet/tools/reportgenerator "-reports:**/TestResults/**/coverage.cobertura.xml" "-targetdir:.ignored/coverage-reports" "-classfilters:-*Program*" \"-reporttypes:Html\;Badges\;JsonSummary\"
  artifacts:
    paths:
      - .ignored/coverage-reports

pages:
  stage: report
  needs:
    - job: test
  only:
    - master
  script:
    - mv .ignored/coverage-reports public
  artifacts:
    paths:
      - public

build:setup:
  stage: build
  only:
    - master
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  needs: ["build:setup"]
  only:
    - master
  image: docker
  services:
    - docker:dind
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/api
  script:
    - docker build --build-arg PROJECT=Api -f Api/Dockerfile -t $IMAGE_NAME -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA -t $IMAGE_NAME:latest .
    - docker push $CI_REGISTRY_IMAGE