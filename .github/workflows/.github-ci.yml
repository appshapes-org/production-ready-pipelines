name: Build

on:
  push:
    branches:
      - '**'
    
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  id-token: write
  packages: write
  pages: write

jobs:

  check:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:7.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check
        run: dotnet format --verify-no-changes --exclude Tests --verbosity quiet

  test:
    needs: check
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:7.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: |
          dotnet test --environment DOTNET_ENVIRONMENT=Test --verbosity normal --filter "Category!=Service&Category!=Integration" --collect:"XPlat Code Coverage" /p:ExcludeByAttribute=\"Obsolete,GeneratedCodeAttribute,CompilerGeneratedAttribute,ExcludeFromCodeCoverage\"
          dotnet tool install --global dotnet-reportgenerator-globaltool
          ~/.dotnet/tools/reportgenerator "-reports:**/TestResults/**/coverage.cobertura.xml" "-targetdir:.ignored/coverage-reports" "-classfilters:-*Program*" "-reporttypes:Html;Badges;JsonSummary"
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: .ignored/coverage-reports
      - name: Setup Pages
        uses: actions/configure-pages@v3
        if: github.ref == 'refs/heads/master'
      - name: Upload Pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.ignored/coverage-reports'
        if: github.ref == 'refs/heads/master'
      - name: Deploy Pages
        id: deployment
        uses: actions/deploy-pages@v2
        if: github.ref == 'refs/heads/master'
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker build --quiet --build-arg PROJECT=Api -f Api/Dockerfile -t ghcr.io/$GITHUB_REPOSITORY/api -t ghcr.io/$GITHUB_REPOSITORY/api:$GITHUB_SHA -t ghcr.io/$GITHUB_REPOSITORY/api:latest .
          docker push ghcr.io/$GITHUB_REPOSITORY/api
          docker push ghcr.io/$GITHUB_REPOSITORY/api:$GITHUB_SHA
          docker push ghcr.io/$GITHUB_REPOSITORY/api:latest
